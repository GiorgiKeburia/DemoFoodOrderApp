{"ast":null,"code":"var _jsxFileName = \"/home/person_one/Desktop/Projects/React/FoodOrderAppDemo/src/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './Cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItem = { ...action.item\n      };\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'Remove',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/person_one/Desktop/Projects/React/FoodOrderAppDemo/src/Store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,WAAW,EAAE;AAFW,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AAC1B,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AAEA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAuBJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EAAxD,CAA9B;AAEA,UAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB;AAEA,QAAII,YAAJ;;AAEA,QAAID,gBAAJ,EAAsB;AACrB,YAAME,WAAW,GAAG,EACnB,GAAGF,gBADgB;AAEnBJ,QAAAA,MAAM,EAAEI,gBAAgB,CAACJ,MAAjB,GAA0BL,MAAM,CAACG,IAAP,CAAYE;AAF3B,OAApB;AAIAK,MAAAA,YAAY,GAAG,CAAC,GAAGX,KAAK,CAACH,KAAV,CAAf;AACAc,MAAAA,YAAY,CAACJ,qBAAD,CAAZ,GAAsCK,WAAtC;AACA,KAPD,MAOO;AACNA,MAAAA,WAAW,GAAG,EAAE,GAAGX,MAAM,CAACG;AAAZ,OAAd;AACAO,MAAAA,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CAAf;AACA;;AACD,WAAO;AACNP,MAAAA,KAAK,EAAEc,YADD;AAENb,MAAAA,WAAW,EAAEK;AAFP,KAAP;AAIA;;AACD,SAAOP,gBAAP;AACA,CA3BD;;AA6BA,MAAMkB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCvB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMsB,oBAAoB,GAAId,IAAD,IAAU;AACtCa,IAAAA,kBAAkB,CAAC;AAAEf,MAAAA,IAAI,EAAE,KAAR;AAAeE,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACA,GAFD;;AAIA,QAAMe,yBAAyB,GAAIV,EAAD,IAAQ;AACzCQ,IAAAA,kBAAkB,CAAC;AAAEf,MAAAA,IAAI,EAAE,QAAR;AAAkBO,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACA,GAFD;;AAIA,QAAMW,WAAW,GAAG;AACnBvB,IAAAA,KAAK,EAAEmB,SAAS,CAACnB,KADE;AAEnBC,IAAAA,WAAW,EAAEkB,SAAS,CAAClB,WAFJ;AAGnBuB,IAAAA,OAAO,EAAEH,oBAHU;AAInBI,IAAAA,UAAU,EAAEH;AAJO,GAApB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cAA2CL,KAAK,CAACQ;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAnBD;;GAAMT,Y;;KAAAA,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\nimport CartContext from './Cart-context';\n\nconst defaultCartState = {\n\titems: [],\n\ttotalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n\tif (action.type === 'ADD') {\n\t\tconst updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n\t\tconst existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id);\n\n\t\tconst existingCartItem = state.items[existingCartItemIndex];\n\n\t\tlet updatedItems;\n\n\t\tif (existingCartItem) {\n\t\t\tconst updatedItem = {\n\t\t\t\t...existingCartItem,\n\t\t\t\tamount: existingCartItem.amount + action.item.amount,\n\t\t\t};\n\t\t\tupdatedItems = [...state.items];\n\t\t\tupdatedItems[existingCartItemIndex] = updatedItem;\n\t\t} else {\n\t\t\tupdatedItem = { ...action.item };\n\t\t\tupdatedItems = state.items.concat(action.item);\n\t\t}\n\t\treturn {\n\t\t\titems: updatedItems,\n\t\t\ttotalAmount: updatedTotalAmount,\n\t\t};\n\t}\n\treturn defaultCartState;\n};\n\nconst CartProvider = (props) => {\n\tconst [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n\tconst addItemToCartHandler = (item) => {\n\t\tdispatchCartAction({ type: 'ADD', item: item });\n\t};\n\n\tconst removeItemFromCartHandler = (id) => {\n\t\tdispatchCartAction({ type: 'Remove', id: id });\n\t};\n\n\tconst cartContext = {\n\t\titems: cartState.items,\n\t\ttotalAmount: cartState.totalAmount,\n\t\taddItem: addItemToCartHandler,\n\t\tremoveItem: removeItemFromCartHandler,\n\t};\n\n\treturn <CartContext.Provider value={cartContext}>{props.children}</CartContext.Provider>;\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}