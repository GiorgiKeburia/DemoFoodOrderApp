{"ast":null,"code":"var _jsxFileName = \"/home/person_one/Desktop/Projects/React/FoodOrderAppDemo/src/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './Cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'Remove',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/person_one/Desktop/Projects/React/FoodOrderAppDemo/src/Store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,WAAW,EAAE;AAFW,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AAC1B,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AACA,WAAO;AACNX,MAAAA,KAAK,EAAEM,YADD;AAENL,MAAAA,WAAW,EAAEQ;AAFP,KAAP;AAIA;;AACD,SAAOV,gBAAP;AACA,CAVD;;AAYA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMiB,oBAAoB,GAAIR,IAAD,IAAU;AACtCO,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACA,GAFD;;AAIA,QAAMS,yBAAyB,GAAIC,EAAD,IAAQ;AACzCH,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,QAAR;AAAkBa,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACA,GAFD;;AAIA,QAAMC,WAAW,GAAG;AACnBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADE;AAEnBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFJ;AAGnBmB,IAAAA,OAAO,EAAEJ,oBAHU;AAInBK,IAAAA,UAAU,EAAEJ;AAJO,GAApB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cAA2CN,KAAK,CAACS;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAnBD;;GAAMV,Y;;KAAAA,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\nimport CartContext from './Cart-context';\n\nconst defaultCartState = {\n\titems: [],\n\ttotalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n\tif (action.type === 'ADD') {\n\t\tconst updatedItems = state.items.concat(action.item);\n\t\tconst updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\t\treturn {\n\t\t\titems: updatedItems,\n\t\t\ttotalAmount: updatedTotalAmount,\n\t\t};\n\t}\n\treturn defaultCartState;\n};\n\nconst CartProvider = (props) => {\n\tconst [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n\tconst addItemToCartHandler = (item) => {\n\t\tdispatchCartAction({ type: 'ADD', item: item });\n\t};\n\n\tconst removeItemFromCartHandler = (id) => {\n\t\tdispatchCartAction({ type: 'Remove', id: id });\n\t};\n\n\tconst cartContext = {\n\t\titems: cartState.items,\n\t\ttotalAmount: cartState.totalAmount,\n\t\taddItem: addItemToCartHandler,\n\t\tremoveItem: removeItemFromCartHandler,\n\t};\n\n\treturn <CartContext.Provider value={cartContext}>{props.children}</CartContext.Provider>;\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}